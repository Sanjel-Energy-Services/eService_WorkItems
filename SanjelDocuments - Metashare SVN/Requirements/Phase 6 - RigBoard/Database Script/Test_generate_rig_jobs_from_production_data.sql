-- Step 1, pull out all call sheet to generate a rig job basic information
-- Some condition based value may not exactly works, so if need use this for production data conversion, more work is needed
INSERT INTO RIG_JOB (ID,CALL_SHEET_NUMBER, CLIENT_COMPANY_ID, CLIENT_COMPANY_SHORTNAME, RIG_ID, RIG_NAME, WELL_LOCATION,WELL_LOCATION_TYPE_ID,WELL_LOCATION_TYPE_NAME, IS_DOWNHOLE_LOCATION, 
JOB_TYPE_ID, JOB_TYPE_NAME,JOB_DATE_TIME,SERVICE_POINT_ID, SERVICE_POINT_NAME)
select ROWNUM + 100 AS ID, CSH.CALL_SHEET_NUMBER AS CALL_SHEET_NUMBER, COM.ID as CLIENT_COMPANY_ID, COM.SHORT_NAME AS CLIENT_COMPANY_SHORTNAME, RG.ID AS RIG_ID, RG.NAME AS RIG_NAME,
CSH.WLI_DH_WELL_LOCATION AS WELL_LOCATION, CSH.WLI_DH_WELL_LOCATION_TYPE_ID AS WELL_LOCATION_TYPE_ID, 
CSH.WLI_DH_WELL_LOCATION_TYPE_NAME AS WELL_LOCATION_TYPE_NAME, 1 AS IS_DOWNHOLE_LOCATION, CSH.JD_JOB_TYPE_ID AS JOB_TYPE_ID,  JT.NAME AS JOB_TYPE_NAME, CSH.FC_EXPECTED_TIME_ON_LOC AS JOB_DATE_TIME,
CSH.JD_SERVICE_POINT_ID AS SERVICE_POINT_ID, CSH.JD_SERVICE_POINT_NAME AS SERVICE_POINT_NAME
from CALLSHEET_HEADERS CSH
LEFT OUTER join CSH_COMPANY_INFO_SCTNS CSHCOM on CSH.ID = CSHCOM.ROOT_ID
LEFT OUTER join COMPANIES COM on CSHCOM.COMPANY_ID = COM.ID
LEFT OUTER JOIN JOB_TYPES JT ON CSH.JD_JOB_TYPE_ID = JT.ID
LEFT OUTER JOIN RIGS RG ON CSH.WLI_RIG_COMPANY_ID = RG.DRILLINGCOMPANY_ID AND CSH.WLI_RIG_NUM = RG.RIG_NO
where FC_EXPECTED_TIME_ON_LOC > TO_DATE('06-01-2016','MM-DD-YYYY');

-- Step 2. Update Job Life Status from Job, Completed - When Job exists

UPDATE RIG_JOB RJ set RJ.JOB_LIFE_STATUS = 8, RJ.JOB_UNIQUE_ID = (select JB.UNIQUE_ID from jobs JB where JB.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER and ROWNUM = 1 ) where exists (select JB.UNIQUE_ID from jobs JB where JB.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER);

select * from RIG_JOB;

-- Step 3. Update Job Life Status from Call Sheet
-- In progress, which call sheet is locked
UPDATE RIG_JOB RJ set RJ.JOB_LIFE_STATUS =7 where RJ.JOB_LIFE_STATUS is null and EXISTS (select * from CALLSHEET_HEADERS CSH where CSH.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER and CSH.STATUS = 5 );

select * from CALLSHEET_HEADERS CSH where CSH.STATUS = 1;
select * from RIG_JOB where JOB_LIFE_STATUS = 2;
-- Scheduled, which call sheet is ready
UPDATE RIG_JOB RJ set RJ.JOB_LIFE_STATUS = 4 where RJ.JOB_LIFE_STATUS is null and EXISTS (select * from CALLSHEET_HEADERS CSH where CSH.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER and CSH.STATUS = 1 );

-- Confirmed, which call sheet is in progress and expected time on location and will call back are unchecked
select * from CALLSHEET_HEADERS CSH where CSH.STATUS = 2 and CSH.FC_IS_EXPECTED_TIME_ON_LOC = 0 and CSH.FC_IS_WILL_CALLBACK = 0;
UPDATE RIG_JOB RJ set RJ.JOB_LIFE_STATUS = 3 where RJ.JOB_LIFE_STATUS is null and EXISTS (select * from CALLSHEET_HEADERS CSH where CSH.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER and CSH.STATUS = 2  and CSH.FC_IS_EXPECTED_TIME_ON_LOC = 0 and CSH.FC_IS_WILL_CALLBACK = 0);

-- Pending , which call sheet is in progress and expected time on location or will call back is checked
UPDATE RIG_JOB RJ set RJ.JOB_LIFE_STATUS = 2 where RJ.JOB_LIFE_STATUS  is null and EXISTS (select * from CALLSHEET_HEADERS CSH where CSH.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER and CSH.STATUS = 2  and (CSH.FC_IS_EXPECTED_TIME_ON_LOC = 1 OR CSH.FC_IS_WILL_CALLBACK = 1));

select * from RIG_JOB where JOB_LIFE_STATUS is null;

-- Step 4. UPdate IS_LISTED status
-- get last rig job to list it on board, this query may not 100% correct, however it is good for testing now


update RIG_JOB set IS_LISTED = 1 where id in(
SELECT id
  FROM RIG_JOB a
 WHERE a.JOB_DATE_TIME = (SELECT MAX(b.JOB_DATE_TIME)
                               FROM RIG_JOB b
                              WHERE a.rig_id = b.rig_id));

update RIG_JOB set IS_LISTED = 0 where IS_LISTED is null;

update RIG_JOB RJ set RJ.JOB_DATE_TIME = (select J.JOB_DATE_TIME from jobs J where J.UNIQUE_ID = RJ.job_unique_id) where RJ.JOB_LIFE_STATUS = 8;

-- Step 5. Update High Profile Well Job flag

update RIG_JOB set IS_HIGH_PROFILE_JOB = 0;

update RIG_JOB RJ set RJ.IS_HIGH_PROFILE_JOB = 1 
where exists (select CSH.JD_CRITICAL_WELL_TYPE_ID from callsheet_headers CSH where csh.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER and  CSH.JD_CRITICAL_WELL_TYPE_ID = 4);

-- step 6. Update well location if there is no downhole location

update RIG_JOB RJ set RJ.WELL_LOCATION = (select CSH.WLI_WELL_LOCATION from CALLSHEET_HEADERS CSH where CSH.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER), RJ.IS_DOWNHOLE_LOCATION = 0 
where exists(select csh.wli_has_dh from CALLSHEET_HEADERS CSH where CSH.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER and csh.wli_has_dh = 0);

update RIG_JOB RJ set RJ.WELL_LOCATION_TYPE_ID = (select CSH.WLI_WELL_LOCATION_TYPE_ID from CALLSHEET_HEADERS CSH where CSH.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER) 
where exists(select csh.wli_has_dh from CALLSHEET_HEADERS CSH where CSH.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER and csh.wli_has_dh = 0);

update RIG_JOB RJ set RJ.WELL_LOCATION_TYPE_NAME = (select CSH.WLI_WELL_LOCATION_TYPE_NAME from CALLSHEET_HEADERS CSH where CSH.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER) 
where exists(select csh.wli_has_dh from CALLSHEET_HEADERS CSH where CSH.CALL_SHEET_NUMBER = RJ.CALL_SHEET_NUMBER and csh.wli_has_dh = 0);



-- 2017/11/30 Bright

INSERT INTO RIG_JOB (ID,CALL_SHEET_NUMBER, CLIENT_COMPANY_ID, CLIENT_COMPANY_SHORTNAME, RIG_ID, RIG_NAME, WELL_LOCATION,WELL_LOCATION_TYPE_ID,WELL_LOCATION_TYPE_NAME, IS_DOWNHOLE_LOCATION, 
JOB_TYPE_ID, JOB_TYPE_NAME,JOB_DATE_TIME,SERVICE_POINT_ID, SERVICE_POINT_NAME,
CALL_SHEET_ID,IS_COD_CLEARED, IS_NEED_BIN, DIRECTION, CLIENT_CONSULTANT1_ID, CLIENT_CONSULTANT1_NAME,CLIENT_CONSULTANT1_CELL,CLIENT_CONSULTANT2_ID,CLIENT_CONSULTANT2_NAME, CLIENT_CONSULTANT2_CELL)
select ROWNUM + 100 AS ID, CSH.CALL_SHEET_NUMBER AS CALL_SHEET_NUMBER, COM.ID as CLIENT_COMPANY_ID, COM.SHORT_NAME AS CLIENT_COMPANY_SHORTNAME, RG.ID AS RIG_ID, RG.NAME AS RIG_NAME,
CSH.WLI_DH_WELL_LOCATION AS WELL_LOCATION, CSH.WLI_DH_WELL_LOCATION_TYPE_ID AS WELL_LOCATION_TYPE_ID, 
CSH.WLI_DH_WELL_LOCATION_TYPE_NAME AS WELL_LOCATION_TYPE_NAME, 1 AS IS_DOWNHOLE_LOCATION, CSH.JD_JOB_TYPE_ID AS JOB_TYPE_ID,  JT.NAME AS JOB_TYPE_NAME, CSH.FC_EXPECTED_TIME_ON_LOC AS JOB_DATE_TIME,
CSH.JD_SERVICE_POINT_ID AS SERVICE_POINT_ID, CSH.JD_SERVICE_POINT_NAME AS SERVICE_POINT_NAME,
CSH.ID AS CALL_SHEET_ID, CSH.IS_COD_CLEARED AS IS_COD_CLEARED, CSH.IS_NEED_BIN AS IS_NEED_BIN, CSH.WLI_DIRECTION_TO_LOCATION AS DIRECTION, CSH.FC_ALERT_BY_CONSULTANT1_ID AS CLIENT_CONSULTANT1_ID, CSH.FC_ALERT_BY_CONSULTANT1 AS CLIENT_CONSULTANT1_NAME,
CSH.FC_ALERT_BY_CONSULTANT1_CELL AS CLIENT_CONSULTANT1_CELL, CSH.FC_ALERT_BY_CONSULTANT2_ID AS CLIENT_CONSULTANT2_ID,CSH.FC_ALERT_BY_CONSULTANT2 AS CLIENT_CONSULTANT2_NAME,
CSH.FC_ALERT_BY_CONSULTANT2_CELL AS CLIENT_CONSULTANT2_CELL 
from CALLSHEET_HEADERS CSH
LEFT OUTER join CSH_COMPANY_INFO_SCTNS CSHCOM on CSH.ID = CSHCOM.ROOT_ID
LEFT OUTER join COMPANIES COM on CSHCOM.COMPANY_ID = COM.ID
LEFT OUTER JOIN JOB_TYPES JT ON CSH.JD_JOB_TYPE_ID = JT.ID
LEFT OUTER JOIN RIGS RG ON CSH.WLI_RIG_COMPANY_ID = RG.DRILLINGCOMPANY_ID AND CSH.WLI_RIG_NUM = RG.RIG_NO
where FC_EXPECTED_TIME_ON_LOC > TO_DATE('06-01-2016','MM-DD-YYYY');

